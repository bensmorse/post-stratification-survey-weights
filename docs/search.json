[
  {
    "objectID": "post-stratification-survey-weights.html",
    "href": "post-stratification-survey-weights.html",
    "title": "Post Stratification Survey Weights",
    "section": "",
    "text": "The gold standard in public opinion research is probability sampling in which people are contacted and surveyed at random from a list of the population. But probability sampling is seldom possible in the real world. For starters, response rates for public opinion polls are often well below 10 percent, and respondents who answer and agree to participate constitute a selective sample that is likely to differ from the general population in terms of their demographic and socio-economic characteristics. Moreover, in many settings, there is no sampling frame or readily-available list of the population from which to sample. The end result is that the sample of respondents in the survey may look nothing like the general population about which the researcher is interested.\nTo recover representative polling estimates, pollsters use a procedure known as post-stratification weighting. The idea is to algorithmically identify a set weights such that the weighted marginal distributions for key demographic variables in our sample match the distributions of Haiti’s actual population.\n\n\nThe GFA baseline survey was administered by between October 28 and December 12, 2024. The local data collection firm used a random-digit-dialing approach to contact respondents. Of the more than 30,000 call attempts, only 6,112 were answered.\n\n\ndispositionnanswered6,112blocked20business784does not exist222no answer1,369not active4,020other29rings busy55voicemail16,717\n\n\nOf the 6,112 answered calls, 3,144 (51 percent) were met with a consenting respondent:\n\n\nconsentn02,96813,144"
  },
  {
    "objectID": "post-stratification-survey-weights.html#motivation",
    "href": "post-stratification-survey-weights.html#motivation",
    "title": "Post Stratification Survey Weights",
    "section": "",
    "text": "The gold standard in public opinion research is probability sampling in which people are contacted and surveyed at random from a list of the population. But probability sampling is seldom possible in the real world. For starters, response rates for public opinion polls are often well below 10 percent, and respondents who answer and agree to participate constitute a selective sample that is likely to differ from the general population in terms of their demographic and socio-economic characteristics. Moreover, in many settings, there is no sampling frame or readily-available list of the population from which to sample. The end result is that the sample of respondents in the survey may look nothing like the general population about which the researcher is interested.\nTo recover representative polling estimates, pollsters use a procedure known as post-stratification weighting. The idea is to algorithmically identify a set weights such that the weighted marginal distributions for key demographic variables in our sample match the distributions of Haiti’s actual population.\n\n\nThe GFA baseline survey was administered by between October 28 and December 12, 2024. The local data collection firm used a random-digit-dialing approach to contact respondents. Of the more than 30,000 call attempts, only 6,112 were answered.\n\n\ndispositionnanswered6,112blocked20business784does not exist222no answer1,369not active4,020other29rings busy55voicemail16,717\n\n\nOf the 6,112 answered calls, 3,144 (51 percent) were met with a consenting respondent:\n\n\nconsentn02,96813,144"
  },
  {
    "objectID": "post-stratification-survey-weights.html#post-stratification-weighting",
    "href": "post-stratification-survey-weights.html#post-stratification-weighting",
    "title": "Post Stratification Survey Weights",
    "section": "Post-stratification Weighting",
    "text": "Post-stratification Weighting\nThe goal is to identify a set weights such that the weighted marginal distributions for key demographic variables in our sample match the distributions of Haiti’s actual population.\nTo do this, we need reference distributions for these variables that constitute our best estimate of Haiti’s actual population distributions. For this, we’ll use the weighted sample distributions in listed in Table 1 of the technical appendix for the Latinobarometer’s 2021 Haiti survey, which which was weighted to represent Haiti’s population.1\nNow that we have our reference distributions, we use the rake command in R to identify post-stratification weights. The rake command uses an Iterative Proportional Fiting (IPF) algorithm to identify weights that produce marginal distributions that match the reference population. See here for a helpful tutorial on this procedure.\n\n\n\n\n\n#| warning: false\n#| message: false\n#| code-fold: true\n\n\nlibrary(survey)\n\nLoading required package: grid\n\n\nLoading required package: Matrix\n\n\n\nAttaching package: 'Matrix'\n\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\n\nLoading required package: survival\n\n\n\nAttaching package: 'survival'\n\n\nThe following object is masked from 'package:future':\n\n    cluster\n\n\n\nAttaching package: 'survey'\n\n\nThe following object is masked from 'package:graphics':\n\n    dotchart\n\n# define data as survey data without weights\ndata.svy.unweighted &lt;- svydesign(ids=~1, data=data)\n\nWarning in svydesign.default(ids = ~1, data = data): No weights or\nprobabilities supplied, assuming equal probability\n\n# define marginal distributions using weighted sample summarized in Table 1 2021 Haiti Latinobarometer weighted sample, p. 4-5\n# https://www.vanderbilt.edu/lapop/haiti/ABHTI2021-Technical-Report-v1.0-FINAL-eng-110921.pdf\n\nGender.dist &lt;- data.frame(Gender = c(\"Female\", \"Male\"),\n                          Freq = nrow(data)*c(1563/3088,1525/3088))\n\nStrata.dist &lt;- data.frame(Strata = c(\"Metropolitan area\", \"Northern\", \"Central\", \"Rest of West\", \"Southern\"),\n                          Freq = nrow(data)*c(650/2605, 491/2605, 584/2605, 385/2605, 495/2605))\n\nAge.dist &lt;-data.frame(Age = c(\"18 to 25\", \"26 to 35\", \"36 to 65\", \"65+\"),\n                      Freq = nrow(data)*c(743/3088, 808/3088, (583+549+257)/3088, 148/3088)) \n\nEducation.dist &lt;- data.frame(Education = c(\"None\", \"Primary\", \"Secondary\", \"University\"),\n                       Freq = nrow(data)*c(194/2910, 459/2910, 1894/2910, 363/2910))\n\n\n# identify weights using IPF algorithm\ndata.svy.rake &lt;- rake(design = data.svy.unweighted,\n                       sample.margins = list(~Gender, ~Strata, ~Age, ~Education),\n                       population.margins = list(Gender.dist, Strata.dist, Age.dist, Education.dist))\n\n# check distribution of weights\n\nsummary(weights(data.svy.rake))\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.1544  0.4596  0.8019  1.0000  1.2894  8.6292 \n\n# trim weights to avoid overly small or large weights (to avoid overextrapolation)\n\ndata.svy.rake.trim &lt;- trimWeights(data.svy.rake, lower=0.2, upper=5, strict=TRUE) \n\n# define weight variable based on raking\n\ndata$weight &lt;- weights(data.svy.rake.trim)\n\nNow we can compare the weighted and unweighted samples. The marginal distributions for the weighted sample closely match those of the weighted sample in the 2021 LAPOP Haiti survey.\n\n# calculated weighted demographics & compare to unweighted\n# weighted demographics match those of Latinobarometer Haiti 2021\n\nweighted_demographics &lt;- data %&gt;% \n  summarize(\n    sample_size = nrow(data),\n    #Gender\n    female = weighted.mean(gender==1, weight, na.rm=TRUE), \n    #Age\n    age_18_25 = weighted.mean(age==1, weight, na.rm=TRUE),\n    age_26_35 = weighted.mean(age==2, weight, na.rm=TRUE),\n    age_36_50 = weighted.mean(age==3, weight, na.rm=TRUE),\n    age_51_65 = weighted.mean(age==4, weight, na.rm=TRUE),\n    age_over65 = weighted.mean(age==5, weight, na.rm=TRUE),\n    # Strata\n    strata_metropolitan_area = weighted.mean(Strata==\"Metropolitan area\", weight, na.rm=TRUE),\n    strata_north = weighted.mean(Strata==\"Northern\", weight, na.rm=TRUE),\n    strata_central = weighted.mean(Strata==\"Central\", weight, na.rm=TRUE),\n    strata_rest_of_west = weighted.mean(Strata==\"Rest of West\", weight, na.rm=TRUE),\n    strata_southern = weighted.mean(Strata==\"Southern\", weight, na.rm=TRUE),\n    #Education\n    No_edu = weighted.mean(Education == \"None\", weight, na.rm=TRUE),\n    Primary = weighted.mean(Education == \"Primary\", weight, na.rm=TRUE),\n    Secondary = weighted.mean(Education == \"Secondary\", weight, na.rm=TRUE),\n    University = weighted.mean(Education == \"University\", weight, na.rm=TRUE),\n  ) %&gt;% \n  round(2)\n\n\n# unweighted demographics\n\nunweighted_demographics &lt;- data %&gt;% \n  summarize(\n    sample_size = nrow(data),\n    #Gender\n    prop_female = mean(gender==1, na.rm=TRUE), \n    #Age\n    age_18_25 = mean(age==1, na.rm=TRUE),\n    age_26_35 = mean(age==2, na.rm=TRUE),\n    age_36_50 = mean(age==3, na.rm=TRUE),\n    age_51_65 = mean(age==4, na.rm=TRUE),\n    age_over65 = mean(age==5, na.rm=TRUE),\n    # Strata\n    strata_metropolitan_area = mean(Strata==\"Metropolitan area\", na.rm=TRUE),\n    strata_north = mean(Strata==\"Northern\", na.rm=TRUE),\n    strata_central = mean(Strata==\"Central\", na.rm=TRUE),\n    strata_rest_of_west = mean(Strata==\"Rest of West\", na.rm=TRUE),\n    strata_southern = mean(Strata==\"Southern\", na.rm=TRUE),\n    #Education\n    no_edu = mean(Education == \"None\", na.rm=TRUE),\n    Primary = mean(Education == \"Primary\", na.rm=TRUE),\n    Secondary = mean(Education == \"Secondary\", na.rm=TRUE),\n    University = mean(Education == \"University\", na.rm=TRUE),\n  ) %&gt;% \n  round(2)\n\n\nunweighted_demographics &lt;- gather(unweighted_demographics, varname, unweighted, 1:length(unweighted_demographics)) %&gt;%\n  select(unweighted)\n\n\ndemographics_out &lt;- weighted_demographics %&gt;%\n  gather(., varname, weighted, 1:length(weighted_demographics)) %&gt;%\n  bind_cols(unweighted_demographics)\n\ndemographics_out\n\n# A tibble: 16 × 3\n   varname                  weighted unweighted\n   &lt;chr&gt;                       &lt;dbl&gt;      &lt;dbl&gt;\n 1 sample_size               3127       3127   \n 2 female                       0.5        0.39\n 3 age_18_25                    0.24       0.22\n 4 age_26_35                    0.26       0.36\n 5 age_36_50                    0.35       0.31\n 6 age_51_65                    0.1        0.09\n 7 age_over65                   0.04       0.02\n 8 strata_metropolitan_area     0.25       0.24\n 9 strata_north                 0.19       0.22\n10 strata_central               0.22       0.16\n11 strata_rest_of_west          0.15       0.08\n12 strata_southern              0.19       0.29\n13 No_edu                       0.06       0.02\n14 Primary                      0.16       0.14\n15 Secondary                    0.65       0.52\n16 University                   0.13       0.33\n\n\nWhich we can visualize as follows:\n\n\nCode\ndemographics_out |&gt;\n  # Remove sample_size row since it's not a proportion\n  filter(varname != \"sample_size\") |&gt;\n  # Pivot to long format for ggplot\n  pivot_longer(cols = c(weighted, unweighted), \n               names_to = \"sample_type\", \n               values_to = \"proportion\") |&gt;\n  # Create the plot\n  ggplot(aes(x = varname, y = proportion, fill = sample_type)) +\n  geom_col(position = \"dodge\", width = 0.7) +\n  scale_fill_manual(values = c(\"weighted\" = \"#2E86AB\", \"unweighted\" = \"#A23B72\"),\n                    labels = c(\"Weighted\", \"Unweighted\")) +\n  scale_y_continuous(labels = scales::percent_format()) +\n  labs(\n    title = \"Weighted vs. Unweighted Sample Demographics\",\n    subtitle = \"Comparison of demographic proportions before and after post-stratification weighting\",\n    x = \"Demographic Variables\",\n    y = \"Proportion\",\n    fill = \"Sample Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"bottom\",\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray60\")\n  )"
  },
  {
    "objectID": "post-stratification-survey-weights.html#footnotes",
    "href": "post-stratification-survey-weights.html#footnotes",
    "title": "Post Stratification Survey Weights",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNote: the Latinobarometer does not specify the reference population it used to generate its weights or the procedure it used↩︎"
  },
  {
    "objectID": "post-stratification-survey-weights.html#weighting-algorithm",
    "href": "post-stratification-survey-weights.html#weighting-algorithm",
    "title": "Post Stratification Survey Weights",
    "section": "Weighting Algorithm",
    "text": "Weighting Algorithm\nThe goal is to identify a set weights such that the weighted marginal distributions for key demographic variables in our sample match the distributions of Haiti’s actual population.\nTo do this, we need reference distributions for these variables that constitute our best estimate of Haiti’s actual population distributions. For this, we’ll use the weighted sample distributions in listed in Table 1 of the technical appendix for the Latinobarometer’s 2021 Haiti survey, which which was weighted to represent Haiti’s population.1\nNow that we have our reference distributions, we use the rake command in R to identify post-stratification weights. The rake command uses an Iterative Proportional Fiting (IPF) algorithm to identify weights that produce marginal distributions that match the reference population. See here for a helpful tutorial on this procedure.\n\n\n\n\n\n\nCode\nlibrary(survey)\n\n# define data as survey data without weights\ndata.svy.unweighted &lt;- svydesign(ids=~1, data=data)\n\n# define marginal distributions using weighted sample summarized in Table 1 2021 Haiti Latinobarometer weighted sample, p. 4-5\n# https://www.vanderbilt.edu/lapop/haiti/ABHTI2021-Technical-Report-v1.0-FINAL-eng-110921.pdf\n\nGender.dist &lt;- data.frame(Gender = c(\"Female\", \"Male\"),\n                          Freq = nrow(data)*c(1563/3088,1525/3088))\n\nStrata.dist &lt;- data.frame(Strata = c(\"Metropolitan area\", \"Northern\", \"Central\", \"Rest of West\", \"Southern\"),\n                          Freq = nrow(data)*c(650/2605, 491/2605, 584/2605, 385/2605, 495/2605))\n\nAge.dist &lt;-data.frame(Age = c(\"18 to 25\", \"26 to 35\", \"36 to 65\", \"65+\"),\n                      Freq = nrow(data)*c(743/3088, 808/3088, (583+549+257)/3088, 148/3088)) \n\nEducation.dist &lt;- data.frame(Education = c(\"None\", \"Primary\", \"Secondary\", \"University\"),\n                       Freq = nrow(data)*c(194/2910, 459/2910, 1894/2910, 363/2910))\n\n\n# identify weights using IPF algorithm\ndata.svy.rake &lt;- rake(design = data.svy.unweighted,\n                       sample.margins = list(~Gender, ~Strata, ~Age, ~Education),\n                       population.margins = list(Gender.dist, Strata.dist, Age.dist, Education.dist))\n\n# check distribution of weights\n\nsummary(weights(data.svy.rake))\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.1544  0.4596  0.8019  1.0000  1.2894  8.6292 \n\n\nCode\n# trim weights to avoid overly small or large weights (to avoid overextrapolation)\n\ndata.svy.rake.trim &lt;- trimWeights(data.svy.rake, lower=0.2, upper=5, strict=TRUE) \n\n# define weight variable based on raking\n\ndata$weight &lt;- weights(data.svy.rake.trim)"
  },
  {
    "objectID": "post-stratification-survey-weights.html#results",
    "href": "post-stratification-survey-weights.html#results",
    "title": "Post Stratification Survey Weights",
    "section": "Results",
    "text": "Results\nNow we can compare the weighted and unweighted samples. The marginal distributions for the weighted sample closely match those of the weighted sample in the 2021 LAPOP Haiti survey.\n\n\nCode\n# calculated weighted demographics & compare to unweighted\n# weighted demographics match those of Latinobarometer Haiti 2021\n\nweighted_demographics &lt;- data %&gt;% \n  summarize(\n    sample_size = nrow(data),\n    #Gender\n    female = weighted.mean(gender==1, weight, na.rm=TRUE), \n    #Age\n    age_18_25 = weighted.mean(age==1, weight, na.rm=TRUE),\n    age_26_35 = weighted.mean(age==2, weight, na.rm=TRUE),\n    age_36_50 = weighted.mean(age==3, weight, na.rm=TRUE),\n    age_51_65 = weighted.mean(age==4, weight, na.rm=TRUE),\n    age_over65 = weighted.mean(age==5, weight, na.rm=TRUE),\n    # Strata\n    strata_metropolitan_area = weighted.mean(Strata==\"Metropolitan area\", weight, na.rm=TRUE),\n    strata_north = weighted.mean(Strata==\"Northern\", weight, na.rm=TRUE),\n    strata_central = weighted.mean(Strata==\"Central\", weight, na.rm=TRUE),\n    strata_rest_of_west = weighted.mean(Strata==\"Rest of West\", weight, na.rm=TRUE),\n    strata_southern = weighted.mean(Strata==\"Southern\", weight, na.rm=TRUE),\n    #Education\n    No_edu = weighted.mean(Education == \"None\", weight, na.rm=TRUE),\n    Primary = weighted.mean(Education == \"Primary\", weight, na.rm=TRUE),\n    Secondary = weighted.mean(Education == \"Secondary\", weight, na.rm=TRUE),\n    University = weighted.mean(Education == \"University\", weight, na.rm=TRUE),\n  ) %&gt;% \n  round(2)\n\n\n# unweighted demographics\n\nunweighted_demographics &lt;- data %&gt;% \n  summarize(\n    sample_size = nrow(data),\n    #Gender\n    prop_female = mean(gender==1, na.rm=TRUE), \n    #Age\n    age_18_25 = mean(age==1, na.rm=TRUE),\n    age_26_35 = mean(age==2, na.rm=TRUE),\n    age_36_50 = mean(age==3, na.rm=TRUE),\n    age_51_65 = mean(age==4, na.rm=TRUE),\n    age_over65 = mean(age==5, na.rm=TRUE),\n    # Strata\n    strata_metropolitan_area = mean(Strata==\"Metropolitan area\", na.rm=TRUE),\n    strata_north = mean(Strata==\"Northern\", na.rm=TRUE),\n    strata_central = mean(Strata==\"Central\", na.rm=TRUE),\n    strata_rest_of_west = mean(Strata==\"Rest of West\", na.rm=TRUE),\n    strata_southern = mean(Strata==\"Southern\", na.rm=TRUE),\n    #Education\n    no_edu = mean(Education == \"None\", na.rm=TRUE),\n    Primary = mean(Education == \"Primary\", na.rm=TRUE),\n    Secondary = mean(Education == \"Secondary\", na.rm=TRUE),\n    University = mean(Education == \"University\", na.rm=TRUE),\n  ) %&gt;% \n  round(2)\n\n\nunweighted_demographics &lt;- gather(unweighted_demographics, varname, unweighted, 1:length(unweighted_demographics)) %&gt;%\n  select(unweighted)\n\n\ndemographics_out &lt;- weighted_demographics %&gt;%\n  gather(., varname, weighted, 1:length(weighted_demographics)) %&gt;%\n  bind_cols(unweighted_demographics)\n\ndemographics_out |&gt;\n    flextable()\n\n\nvarnameweightedunweightedsample_size3,127.003,127.00female0.500.39age_18_250.240.22age_26_350.260.36age_36_500.350.31age_51_650.100.09age_over650.040.02strata_metropolitan_area0.250.24strata_north0.190.22strata_central0.220.16strata_rest_of_west0.150.08strata_southern0.190.29No_edu0.060.02Primary0.160.14Secondary0.650.52University0.130.33\n\n\nWhich we can visualize as follows:\n\n\nCode\ndemographics_out |&gt;\n  # Remove sample_size row since it's not a proportion\n  filter(varname != \"sample_size\") |&gt;\n  # Pivot to long format for ggplot\n  pivot_longer(cols = c(weighted, unweighted), \n               names_to = \"sample_type\", \n               values_to = \"proportion\") |&gt;\n  # Create the plot\n  ggplot(aes(x = varname, y = proportion, fill = sample_type)) +\n  geom_col(position = \"dodge\", width = 0.7) +\n  scale_fill_manual(values = c(\"weighted\" = \"#2E86AB\", \"unweighted\" = \"#A23B72\"),\n                    labels = c(\"Weighted\", \"Unweighted\")) +\n  scale_y_continuous(labels = scales::percent_format()) +\n  labs(\n    title = \"Weighted vs. Unweighted Sample Demographics\",\n    subtitle = \"Comparison of demographic proportions before and after post-stratification weighting\",\n    x = \"Demographic Variables\",\n    y = \"Proportion\",\n    fill = \"Sample Type\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"bottom\",\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12, color = \"gray60\")\n  )"
  }
]